openapi: 3.0.3
info:
  title: Practical 6
  description: CRUD operations with MySQL
 
  contact:
    email: krishkevadiya6633@gmail.com
  version: 1.0.11
servers:
  - url: http://localhost:5000
tags:
  - name: User
    description: CRUD APIs
   
paths:
  /user:
    get:
      tags:
        - User
      summary: Get records of all users
      description: Get all information of users
      responses:
        '200':
          description: Get users
    post:
      tags:
        - User
      summary: Create new user
      description: Give data like name, email and branch
      requestBody:
        description: name,email and branch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        '200':
          description: data inserted...
    put:
      tags:
        - User
      summary: Update an existing user
      description: Update an existing user by ID
      parameters:
        - name: ID
          in: path
          description: Update information of particular user with ID
          required: true
      requestBody:
        description: Update an existent User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update'
        required: true
      responses:
        '200':
          description: Data updated...
    delete:
      tags:
        - User
      summary: Deletes user
      description: Delete a user with ID
      parameters:
        - name: ID
          in: path
          description: 'Delete by ID'
          required: true
      responses:
        '200':
          description: Data deleted...
  /user/{id}:
    get:
      tags:
        - User
      summary: Get records of a user
      description: Get all information of a user
      parameters:
        - name: ID
          in: path
          description: Get information of particular user with ID
          required: true
      responses:
        '200':
          description: Get users
   
components:
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
          example: Krish
        email:
          type: string
          example: krish@gmail.com
        branch:
          type: string
          example: IT
    update:
      type: object
      properties:
        name:
          type: string
          example: krish
        email:
          type: string
          example: krish@gmail.com
        branch:
          type: string
          example: IT
   